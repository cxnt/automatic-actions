name: Multiple Jobs Test

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Write Tag to ENV variable
        run: echo "RELEASE_VERSION=${GITHUB_REF_NAME:1}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: ${{ secrets.PYPI_USERNAME }}
          password: ${{ secrets.PYPI_PASSWORD }}

      - name: Delay for PyPI publish
        uses: jakejarvis/wait-action@master
        with:
          time: "120s"

      - name: Build and Push Docker Image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: cxnt/automatic-actions
          tags: ${{ env.RELEASE_VERSION }}
          addLatest: true
          dockerfile: "docker/images/automatic/Dockerfile"
          registry: docker.io
          buildArgs: |
            tag_ref_name=${{ env.RELEASE_VERSION }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  synthetic:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Write Tag to ENV variable
        run: echo "RELEASE_VERSION=${GITHUB_REF_NAME:1}" >> $GITHUB_ENV

      - name: Build and Push Docker Image with NVIDIA
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: cxnt/synthetic
          tags: ${{ env.RELEASE_VERSION }}, latest
          addLatest: true
          dockerfile: "docker/images/synthetic/Dockerfile"
          registry: docker.io
          buildArgs: |
            tag_ref_name=${{ env.RELEASE_VERSION }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  system:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Write Tag to ENV variable
        run: echo "RELEASE_VERSION=${GITHUB_REF_NAME:1}" >> $GITHUB_ENV

      - name: Build and Push Docker Image with NVIDIA
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: cxnt/system
          tags: ${{ env.RELEASE_VERSION }}, latest
          addLatest: true
          dockerfile: "docker/images/system/Dockerfile"
          registry: docker.io
          buildArgs: |
            tag_ref_name=${{ env.RELEASE_VERSION }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  collaboration:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Write Tag to ENV variable
        run: echo "RELEASE_VERSION=${GITHUB_REF_NAME:1}" >> $GITHUB_ENV

      - name: Build and Push Docker Image with NVIDIA
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: cxnt/collaboration
          tags: ${{ env.RELEASE_VERSION }}, latest
          addLatest: true
          dockerfile: "docker/images/collaboration/Dockerfile"
          registry: docker.io
          buildArgs: |
            tag_ref_name=${{ env.RELEASE_VERSION }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  super:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Write Tag to ENV variable
        run: echo "RELEASE_VERSION=${GITHUB_REF_NAME:1}" >> $GITHUB_ENV

      - name: Build and Push Docker Image with NVIDIA
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: cxnt/super
          tags: ${{ env.RELEASE_VERSION }}, latest
          addLatest: true
          dockerfile: "docker/images/super/Dockerfile"
          registry: docker.io
          buildArgs: |
            tag_ref_name=${{ env.RELEASE_VERSION }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  testing:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Write Tag to ENV variable
        run: echo "RELEASE_VERSION=${GITHUB_REF_NAME:1}" >> $GITHUB_ENV

      - name: Build and Push Docker Image with NVIDIA
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: cxnt/testing
          tags: ${{ env.RELEASE_VERSION }}, latest
          addLatest: true
          dockerfile: "docker/images/testing/Dockerfile"
          registry: docker.io
          buildArgs: |
            tag_ref_name=${{ env.RELEASE_VERSION }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  uolbsc:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Write Tag to ENV variable
        run: echo "RELEASE_VERSION=${GITHUB_REF_NAME:1}" >> $GITHUB_ENV

      - name: Build and Push Docker Image with NVIDIA
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: cxnt/uolbsc
          tags: ${{ env.RELEASE_VERSION }}, latest
          addLatest: true
          dockerfile: "docker/images/uolbsc/Dockerfile"
          registry: docker.io
          buildArgs: |
            tag_ref_name=${{ env.RELEASE_VERSION }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
